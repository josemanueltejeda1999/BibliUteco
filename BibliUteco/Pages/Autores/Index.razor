@page "/autores"
@using BibliUteco.Models
@using BibliUteco.Services.Interfaces
@inject IAutorService AutorService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@attribute [Authorize(Roles = "Administrador,Bibliotecario")]

<PageTitle>Autores - BibliUteco</PageTitle>

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="fw-bold mb-0">📚 Gestión de Autores</h2>
                    <p class="text-muted mb-0">Administra los autores de la biblioteca</p>
                </div>
                <button class="btn btn-primary" @onclick="IrACrear">
                    <i class="bi bi-plus-circle"></i> Nuevo Autor
                </button>
            </div>
        </div>
    </div>

    @if (autores == null)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-3 text-muted">Cargando autores...</p>
        </div>
    }
    else if (!autores.Any())
    {
        <div class="alert alert-info text-center" role="alert">
            <i class="bi bi-info-circle fs-1"></i>
            <h4 class="mt-3">No hay autores registrados</h4>
            <p>Comienza agregando un nuevo autor haciendo clic en el botón "Nuevo Autor"</p>
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>ID</th>
                                <th>Nombre Completo</th>
                                <th>Nacionalidad</th>
                                <th>Fecha Nacimiento</th>
                                <th>Libros</th>
                                <th>Estado</th>
                                <th class="text-center">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var autor in autores)
                            {
                                <tr>
                                    <td>@autor.AutorId</td>
                                    <td>
                                        <strong>@autor.NombreCompleto</strong>
                                    </td>
                                    <td>@(autor.Nacionalidad ?? "N/A")</td>
                                    <td>@(autor.FechaNacimiento?.ToString("dd/MM/yyyy") ?? "N/A")</td>
                                    <td>
                                        <span class="badge bg-info">
                                            @(autor.Libros?.Count ?? 0) libros
                                        </span>
                                    </td>
                                    <td>
                                        @if (autor.Activo)
                                        {
                                            <span class="badge bg-success">Activo</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">Inactivo</span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group btn-group-sm" role="group">
                                            <button class="btn btn-outline-primary" @onclick="() => IrADetalles(autor.AutorId)" title="Ver detalles">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            <button class="btn btn-outline-warning" @onclick="() => IrAEditar(autor.AutorId)" title="Editar">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button class="btn btn-outline-danger" @onclick="() => ConfirmarEliminar(autor)" title="Eliminar">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="mt-3">
            <p class="text-muted">Total de autores: <strong>@autores.Count</strong></p>
        </div>
    }
</div>

@code {
    private List<Autor>? autores;

    protected override async Task OnInitializedAsync()
    {
        await CargarAutores();
    }

    private async Task CargarAutores()
    {
        autores = await AutorService.ObtenerTodosAsync();
    }

    private void IrACrear()
    {
        Navigation.NavigateTo("/autores/crear");
    }

    private void IrADetalles(int id)
    {
        Navigation.NavigateTo($"/autores/detalles/{id}");
    }

    private void IrAEditar(int id)
    {
        Navigation.NavigateTo($"/autores/editar/{id}");
    }

    private async Task ConfirmarEliminar(Autor autor)
    {
        bool confirmado = await JS.InvokeAsync<bool>("confirm",
            $"¿Está seguro de eliminar al autor '{autor.NombreCompleto}'?");

        if (confirmado)
        {
            var resultado = await AutorService.EliminarAsync(autor.AutorId);
            if (resultado)
            {
                await JS.InvokeVoidAsync("alert", "Autor eliminado exitosamente");
                await CargarAutores();
            }
            else
            {
                await JS.InvokeVoidAsync("alert", "No se pudo eliminar el autor. Puede que tenga libros asociados.");
            }
        }
    }
}