@page "/autores/editar/{Id:int}"
@using BibliUteco.Models
@using BibliUteco.Services.Interfaces
@inject IAutorService AutorService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@attribute [Authorize(Roles = "Administrador,Bibliotecario")]

<PageTitle>Editar Autor - BibliUteco</PageTitle>

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            @if (autor == null)
            {
                <div class="text-center py-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <p class="mt-3 text-muted">Cargando datos del autor...</p>
                </div>
            }
            else
            {
                <div class="card shadow-sm">
                    <div class="card-header bg-warning text-dark">
                        <h3 class="mb-0"><i class="bi bi-pencil-square"></i> Editar Autor</h3>
                    </div>
                    <div class="card-body">
                        <EditForm Model="@autor" OnValidSubmit="@ActualizarAutor">
                            <DataAnnotationsValidator />
                            <ValidationSummary class="alert alert-danger" />

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-bold">Nombre *</label>
                                    <InputText @bind-Value="autor.Nombre" class="form-control" placeholder="Ej: Gabriel" />
                                    <ValidationMessage For="@(() => autor.Nombre)" class="text-danger" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-bold">Apellido *</label>
                                    <InputText @bind-Value="autor.Apellido" class="form-control" placeholder="Ej: García Márquez" />
                                    <ValidationMessage For="@(() => autor.Apellido)" class="text-danger" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-bold">Nacionalidad</label>
                                    <InputText @bind-Value="autor.Nacionalidad" class="form-control" placeholder="Ej: Colombiana" />
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-bold">Fecha de Nacimiento</label>
                                    <InputDate @bind-Value="autor.FechaNacimiento" class="form-control" />
                                </div>
                            </div>

                            <div class="mb-3">
                                <label class="form-label fw-bold">Biografía</label>
                                <InputTextArea @bind-Value="autor.Biografia" class="form-control" rows="4"
                                               placeholder="Breve descripción del autor..." />
                            </div>

                            <div class="mb-3 form-check">
                                <InputCheckbox @bind-Value="autor.Activo" class="form-check-input" id="activo" />
                                <label class="form-check-label" for="activo">
                                    Activo
                                </label>
                            </div>

                            <hr />

                            <div class="d-flex justify-content-between">
                                <button type="button" class="btn btn-secondary" @onclick="Cancelar">
                                    <i class="bi bi-x-circle"></i> Cancelar
                                </button>
                                <button type="submit" class="btn btn-warning" disabled="@guardando">
                                    @if (guardando)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                        <span>Guardando...</span>
                                    }
                                    else
                                    {
                                        <i class="bi bi-save"></i>
                                        <span>Actualizar Autor</span>
                                    }
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Autor? autor;
    private bool guardando = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarAutor();
    }

    private async Task CargarAutor()
    {
        autor = await AutorService.ObtenerPorIdAsync(Id);

        if (autor == null)
        {
            await JS.InvokeVoidAsync("alert", "Autor no encontrado");
            Navigation.NavigateTo("/autores");
        }
    }

    private async Task ActualizarAutor()
    {
        guardando = true;
        try
        {
            var resultado = await AutorService.ActualizarAsync(autor!);
            if (resultado)
            {
                await JS.InvokeVoidAsync("alert", "Autor actualizado exitosamente");
                Navigation.NavigateTo("/autores");
            }
            else
            {
                await JS.InvokeVoidAsync("alert", "Error al actualizar el autor. Intente nuevamente.");
            }
        }
        finally
        {
            guardando = false;
        }
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/autores");
    }
}