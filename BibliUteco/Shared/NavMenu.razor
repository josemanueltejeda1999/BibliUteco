@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BibliUteco</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <AuthorizeView>
            <Authorized>
                <div class="px-3 py-2 bg-light border-bottom mb-3">
                    <small class="text-muted">Sesión iniciada como:</small><br />
                    <strong>@context.User.Identity?.Name</strong>
                    @if (rolActual != null)
                    {
                        <br />
                        <span class="badge @ObtenerClaseBadge(rolActual)">@rolActual</span>
                    }
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="dashboard">
                        <span class="bi bi-speedometer2" aria-hidden="true"></span> Dashboard
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
    
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="autores">
                <span class="bi bi-person-lines-fill" aria-hidden="true"></span> Autores
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="categorias">
                <span class="bi bi-folder-fill" aria-hidden="true"></span> Categorías
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="libros">
                <span class="bi bi-book-fill" aria-hidden="true"></span> Libros
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="estudiantes">
                <span class="bi bi-people-fill" aria-hidden="true"></span> Estudiantes
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="prestamos">
                <span class="bi bi-clipboard-check" aria-hidden="true"></span> Préstamos
            </NavLink>
        </div>
        <AuthorizeView Roles="Administrador">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="usuarios">
                    <span class="bi bi-people" aria-hidden="true"></span> Usuarios
                </NavLink>
            </div>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private string? rolActual;

    protected override async Task OnParametersSetAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            // Obtener el rol directamente de los claims para evitar consultas al DbContext desde el UserManager
            rolActual = user.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role || c.Type == "role")?.Value;

            // Fallback: comprobar roles mediante IsInRole (usa los claims de la cookie principal)
            if (string.IsNullOrEmpty(rolActual))
            {
                if (user.IsInRole("Administrador")) rolActual = "Administrador";
                else if (user.IsInRole("Bibliotecario")) rolActual = "Bibliotecario";
                else if (user.IsInRole("Lector")) rolActual = "Lector";
            }
        }
    }

    private string ObtenerClaseBadge(string rol)
    {
        return rol switch
        {
            "Administrador" => "bg-danger",
            "Bibliotecario" => "bg-warning text-dark",
            _ => "bg-secondary"
        };
    }
}
